/* Generated by less 2.4.0 */
.CodeMirror,
.CodeMirror-scroll {
  background-color: #1e2028;
  color: #ffffff;
  font-family: "Menlo", "SourceSansPro", monospace;
  font-weight: 400;
}
.CodeMirror-focused .CodeMirror-activeline-background {
  background: #1e2028;
}
.show-line-padding .CodeMirror-focused .CodeMirror-activeline-background {
  box-shadow: inset 15px 0 0 0 #1e2028;
}
.CodeMirror-focused .CodeMirror-activeline .CodeMirror-gutter-elt {
  background: rgba(0, 0, 0, 0.2);
  color: #fff;
}
.CodeMirror-focused .CodeMirror-activeline .inline-widget .CodeMirror-gutter-elt {
  color: #808080;
}
.cm-atom {
  color: #00a0be;
}
.cm-string,
.cm-string-2,
.cm-hr {
  color: #bd2c38;
}
.cm-number,
.cm-attribute,
.cm-plus {
  color: #786dc4;
  margin: 0;
}
.cm-def,
.cm-property {
  color: #ffffff;
}
.cm-variable,
.cm-variable-2,
.cm-variable-3,
.cm-operator,
.cm-meta,
.cm-bracket {
  color: #dddddd;
}
.cm-comment {
  color: #41b645;
}
.cm-error,
.cm-minus {
  color: #ff0000;
  text-decoration: underline;
}
.cm-header {
  color: #d85896;
}
.cm-link {
  color: #4155d1;
  text-decoration: none;
}
.cm-rangeinfo {
  color: #6c71c4;
}
.cm-keyword,
.cm-qualifier,
.cm-builtin,
.cm-tag,
.cm-quote {
  color: #b21889;
}
/* Extra CSS */
.CodeMirror-searching {
  background-color: #d3cd69;
}
.CodeMirror-searching.searching-current-match {
  background-color: #f6a644;
}
.CodeMirror-cursor {
  border-left: 1px solid #c5c8c6 !important;
}
.CodeMirror-gutters {
  background-color: #303139;
  border-right: none;
}
.CodeMirror-linenumber {
  color: #808080;
}
.CodeMirror .CodeMirror-selected {
  background: #54565b;
}
.CodeMirror-focused .CodeMirror-selected {
  background: #65654d;
}
.CodeMirror-matchingbracket,
.CodeMirror-matchingtag {
  /* Ensure visibility against gray inline editor background */
  background-color: #2e5c00;
  color: #dddddd !important;
}
.CodeMirror-overwrite .CodeMirror-cursor {
  border-left: none !important;
  border-bottom: 1px solid #fff;
}
/*
CodeMirror's use of descendant selectors for certain styling causes problems when editors are
nested because, for items in the inner editor, the left-hand clause in the selector will now
match either the actual containing CodeMirror instance *OR* the outer "host" CodeMirror instance.

TODO (issue #324): We'll still have problems if editors can be nested more than one level deep,
or if any other descendant-selector-driven CM styles can differ between inner & outer editors
(potential problem areas include line wrap and coloring theme: basically, anything in codemirror.css
that uses a descandant selector where the CSS class name to the left of the space is something
other than a vanilla .CodeMirror)
*/
.CodeMirror .CodeMirror {
  background: transparent;
}
.CodeMirror .CodeMirror .CodeMirror-gutters {
  background: transparent;
  border-right: none;
}
.CodeMirror .CodeMirror .CodeMirror-activeline-background {
  background: transparent;
}
.CodeMirror .CodeMirror .CodeMirror-activeline .CodeMirror-gutter-elt {
  background: transparent;
  color: #767676;
}
.CodeMirror .CodeMirror-focused .CodeMirror-activeline-background {
  background: #2f2f2f;
}
.CodeMirror .CodeMirror-focused .CodeMirror-activeline .CodeMirror-gutter-elt {
  background: rgba(0, 0, 0, 0.2);
  color: #fff;
}
.CodeMirror-foldgutter-open:after {
  color: #666;
}
.CodeMirror-foldgutter-folded:after {
  color: #aaa;
}
.CodeMirror.over-gutter .CodeMirror-foldgutter-open:after,
.CodeMirror-activeline .CodeMirror-foldgutter-open:after {
  color: #888;
}
.CodeMirror-foldmarker {
  border-color: #000;
  color: #ccc;
  background-color: #444;
}
/* Non-editor styling */
.image-view,
.not-editor {
  background-color: #1d1f21;
}
.view-pane .image-view {
  color: #dddddd;
}
